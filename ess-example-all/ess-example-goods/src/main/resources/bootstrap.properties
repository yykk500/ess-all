# 指定spring.profiles环境 dev=开发环境、test=测试、prod=生产环境
spring.profiles.active=dev
# 指定服务端口
server.port=28020
# Spring 项目名称
spring.application.name=example-goods
# logger path配置
logging.path=d:/data/logs

# *************************** nacos 配置中心****************************** #
 # nacos 配置中心是否开启，默认开启:true ，关闭：false
 spring.cloud.nacos.config.enabled=true
# nacos配置中心地址
spring.cloud.nacos.config.server-addr=nacos.233.com:8846,nacos.233.com:8847,nacos.233.com:8848
# nacos配置中心前缀   注：命名规则，合法的参数只能包含字母、数字、"_"、"-"、"."、":"
spring.cloud.nacos.config.prefix=example-goods
# nacos配置中心命名空间 默认：public  注：命名规则，合法的参数只能包含字母、数字、"_"、"-"、"."、":"
spring.cloud.nacos.config.namespace=goods-space
# nacos配置中心分组 默认：DEFAULT_GROUP  注：命名规则，合法的参数只能包含字母、数字、"_"、"-"、"."、":"
spring.cloud.nacos.config.group=goods-group
# 配置dataid 文件扩展命名 默认：properties 注：前后不要出现空格
spring.cloud.nacos.config.file-extension=properties
# 获取配置超时时间（毫秒） 默认3000
spring.cloud.nacos.config.timeout=5000
# 服务器重连接错误的最大数量。
spring.cloud.nacos.config.max-retry=3
# nacos获得配置失败的重试时间。
spring.cloud.nacos.config.config-retry-time=3000


# 引入jdbc.properties 是否开启动态刷新：refresh=false ，分组:group=DEFAULT_GROUP
spring.cloud.nacos.config.extension-configs[0]=jdbc.properties
spring.cloud.nacos.config.extension-configs[0].refresh=false
spring.cloud.nacos.config.extension-configs[0].group=DEFAULT_GROUP
# 引入cache.properties、mq.properties、mybatis.properties
spring.cloud.nacos.config.extension-configs[1]=cache.properties
spring.cloud.nacos.config.extension-configs[2]=mq.properties
spring.cloud.nacos.config.extension-configs[3]=mybatis.properties


# 支持哪些共享配置的 Data Id 在配置变化时，应用中是否可动态刷新， 感知到最新的配置值，多个 Data Id 之间用逗号隔开。如果没有明确配置，默认情况下所有共享配置的 Data Id 都不支持动态刷新。
#spring.cloud.nacos.config.shared-configs[x].refresh=